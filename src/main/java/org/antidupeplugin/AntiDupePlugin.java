package org.antidupeplugin;

import org.bukkit.Bukkit;
import org.bukkit.ChatColor;
import org.bukkit.Material;
import org.bukkit.entity.Player;
import org.bukkit.event.EventHandler;
import org.bukkit.event.Listener;
import org.bukkit.event.player.PlayerEditBookEvent;
import org.bukkit.inventory.ItemStack;
import org.bukkit.plugin.java.JavaPlugin;

import com.comphenix.protocol.PacketType;
import com.comphenix.protocol.ProtocolLibrary;
import com.comphenix.protocol.ProtocolManager;
import com.comphenix.protocol.events.ListenerPriority;
import com.comphenix.protocol.events.PacketAdapter;
import com.comphenix.protocol.events.PacketEvent;

import java.util.HashMap;
import java.util.UUID;

public class AntiDupePlugin extends JavaPlugin implements Listener {

    private ProtocolManager protocolManager;
    private static final long COOLDOWN_TIME = 500; // 500ms cooldown
    private static final int MAX_PACKETS = 10;
    private final HashMap<UUID, Long> lastClickTime = new HashMap<>();
    private final HashMap<UUID, Integer> clickCount = new HashMap<>();

    @Override
    public void onEnable() {
        protocolManager = ProtocolLibrary.getProtocolManager();
        getServer().getPluginManager().registerEvents(this, this);

        setupPacketListeners();

        getLogger().info("AntiDupePlugin has been enabled!");
    }

    private void setupPacketListeners() {
        protocolManager.addPacketListener(new PacketAdapter(this, ListenerPriority.HIGHEST,
                PacketType.Play.Client.WINDOW_CLICK, PacketType.Play.Client.B_EDIT) {
            @Override
            public void onPacketReceiving(PacketEvent event) {
                Player player = event.getPlayer();
                UUID playerId = player.getUniqueId();

                if (event.getPacketType() == PacketType.Play.Client.WINDOW_CLICK) {
                    if (isThrottling(playerId)) {
                        event.setCancelled(true);
                        player.sendMessage(ChatColor.RED + "You are clicking too fast!");
                        return;
                    }
                } else if (event.getPacketType() == PacketType.Play.Client.B_EDIT) {
                    if (player.getInventory().getItemInMainHand().getType() != Material.WRITABLE_BOOK) {
                        event.setCancelled(true);
                        player.sendMessage(ChatColor.RED + "Book editing is only allowed with a book in your main hand!");
                        return;
                    }
                }
            }
        });
    }

    private boolean isThrottling(UUID playerId) {
        long currentTime = System.currentTimeMillis();
        long lastTime = lastClickTime.getOrDefault(playerId, 0L);

        if ((currentTime - lastTime) < COOLDOWN_TIME) {
            clickCount.put(playerId, clickCount.getOrDefault(playerId, 0) + 1);
            if (clickCount.get(playerId) > MAX_PACKETS) {
                return true;
            }
        } else {
            clickCount.put(playerId, 1);
        }

        lastClickTime.put(playerId, currentTime);
        return false;
    }

    @EventHandler
    public void onPlayerEditBook(PlayerEditBookEvent event) {
        Player player = event.getPlayer();
        String title = event.getNewBookMeta().getTitle();

        if (title != null && title.toLowerCase().contains("exploit")) {
            event.setCancelled(true);
            player.sendMessage(ChatColor.RED + "Suspicious book title detected. Action blocked.");
            getLogger().warning("Potential exploit attempt by " + player.getName() + " with book title: " + title);
        }
    }

    @Override
    public void onDisable() {
        protocolManager.removePacketListeners(this);
        getLogger().info("AntiDupePlugin has been disabled!");
    }
}